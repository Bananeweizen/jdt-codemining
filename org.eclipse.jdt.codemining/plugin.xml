<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

   <extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester
			id="org.eclipse.jdt.internal.ui.JavaPreferencesPropertyTester"
			type="java.lang.Object"
			namespace="org.eclipse.jdt.codemining"
			properties="hasPreference"
			class="org.eclipse.jdt.internal.ui.preferences.JavaPreferencesPropertyTester">
		</propertyTester>
  </extension>

  <extension
         point="org.eclipse.ui.workbench.texteditor.codeMiningProviders">
      <codeMiningProvider
         class="org.eclipse.jdt.internal.ui.javaeditor.codemining.JavaCodeMiningProvider"
         id="org.eclipse.jdt.ui.codemining.general"
         label="%JavaCodeMiningProvider.label">
	     <enabledWhen>
	        <and>
	            <with variable="editorInput">
	               <adapt type="org.eclipse.core.resources.IFile">
	                  <test property="org.eclipse.core.resources.contentTypeId" value="org.eclipse.jdt.core.javaSource" />
	               </adapt>
	           	</with>
	           	<or>
	           	   <!-- TODO: change to property="org.eclipse.jdt.ui.hasPreference" -->
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.references" forcePluginActivation="true"/>
	           	   <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.implementations" forcePluginActivation="true"/>
	           	</or>
           	</and>
         </enabledWhen>
      </codeMiningProvider>
   </extension>
       
  <extension
         point="org.eclipse.ui.workbench.texteditor.codeMiningProviders">
      <codeMiningProvider
         class="org.eclipse.jdt.internal.ui.javaeditor.codemining.JavaMethodParameterCodeMiningProvider"
         id="org.eclipse.jdt.ui.codemining.method_parameter"
         label="%JavaMethodParameterCodeMiningProvider.label">         
	     <enabledWhen>
	        <and>
               <with variable="editorInput">
                  <adapt type="org.eclipse.core.resources.IFile">
                     <test property="org.eclipse.core.resources.contentTypeId" value="org.eclipse.jdt.core.javaSource" />
                  </adapt>
           	   </with>
           	   <or>
           	   	  <!-- TODO: change to property="org.eclipse.jdt.ui.hasPreference" -->
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.methodParameter.names" forcePluginActivation="true"/>
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.methodParameter.types" forcePluginActivation="true"/>
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.endStatement" forcePluginActivation="true"/>
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.debug.variable" forcePluginActivation="true"/>
	           </or>
           	</and>
         </enabledWhen>
      </codeMiningProvider>
   </extension>
   
  <extension
         point="org.eclipse.ui.workbench.texteditor.codeMiningProviders">
      <codeMiningProvider
         class="org.eclipse.jdt.junit.codemining.JUnitCodeMiningProvider"
         id="org.eclipse.jdt.junit.codemining"
         label="%JUnitCodeMiningProvider.label">
         <enabledWhen>
            <and>
               <with variable="editorInput">
                  <adapt type="org.eclipse.core.resources.IFile">
                     <test property="org.eclipse.core.resources.contentTypeId" value="org.eclipse.jdt.core.javaSource" />
                  </adapt>
           	   </with>
           	   <or>
           	   	  <!-- TODO: change to property="org.eclipse.jdt.ui.hasPreference" -->
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.junit.status" forcePluginActivation="true"/>
	              <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.junit.run" forcePluginActivation="true"/>
                  <test property="org.eclipse.jdt.codemining.hasPreference" value="java.codemining.junit.debug" forcePluginActivation="true"/>
	           </or>
	        </and>           	
         </enabledWhen>
      </codeMiningProvider>
   </extension>
   
    <extension point="org.eclipse.core.runtime.preferences">
        <initializer class=" org.eclipse.jdt.internal.ui.preferences.MyJavaUIPreferenceInitializer"/>
    </extension>
       
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%codeMiningPageName"
            category="org.eclipse.jdt.ui.preferences.JavaEditorPreferencePage"
            class="org.eclipse.jdt.internal.ui.preferences.JavaEditorCodeMiningPreferencePage"
            id="org.eclipse.jdt.ui.preferences.JavaEditorCodeMiningPreferencePage">
            <keywordReference id="org.eclipse.jdt.ui.codemining"/>
      </page>   
    </extension>   
</plugin>
